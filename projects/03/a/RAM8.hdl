// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/RAM8.hdl

/**
 * Memory of 8 registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM8 {
    IN in[16], load, address[3];
    OUT out[16];

    PARTS:
    DMux16(in=in, sel=address[0], a=in0, b=in1);
    Mux(a=load, b=false, sel=address[0], out=load0);
    Mux(a=false, b=load, sel=address[0], out=load1);
    RAM4(in=in0, load=load0, address[0]=address[1], address[1]=address[2], out=out0);
    RAM4(in=in1, load=load1, address[0]=address[1], address[1]=address[2], out=out1);
    Mux16(a=out0, b=out1, sel=address[0], out=out);
}
